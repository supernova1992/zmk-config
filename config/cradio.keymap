/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&td ESCAPE Q  &kp W        &kp E       &kp R    &kp T            &kp Y      &kp U  &kp I                 &kp O             &kp P
&hm LSHFT A   &hm LCTRL S  &hm LGUI D  &kp F    &kp G            &kp H      &kp J  &hm RGUI K            &hm RCTRL L       &hm RSHFT ENTER
&kp Z         &kp X        &kp C       &kp V    &kp B            &kp N      &kp M  &td UNDERSCORE COMMA  &td MINUS PERIOD  &td COLON SLASH
                                       &kp TAB  &kp BACKSPACE    &kp SPACE  &to 1
            >;
        };

        left_layer {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DLLR       &kp PRCNT    &kp CARET  &kp AMPERSAND         &kp ASTERISK           &kp LESS_THAN  &kp GREATER_THAN
&kp TAB          &kp EQUAL      &kp PLUS      &kp SEMICOLON  &kp SQT      &kp BSLH   &kp LBRC              &kp RBRC               &kp PIPE       &kp ENTER
&kp TILDE        &kp LG(RS(Q))  &kp LA(LBKT)  &kp GRAVE      &kp DQT      &kp LBKT   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RBKT       &to 3
                                              &to 0          &trans       &trans     &to 2
            >;
        };

        right_layer {
            bindings = <
&kp ESC  &kp C_PP  &kp C_PREV    &kp C_NEXT    &kp LS(MINUS)    &kp MINUS      &kp N7  &kp N8  &kp N9  &trans
&kp TAB  &trans    &kp C_VOL_DN  &kp C_VOL_UP  &kp LS(EQUAL)    &kp EQUAL      &kp N4  &kp N5  &kp N6  &kp ENTER
&to 4    &kp AMPS  &kp SLASH     &kp STAR      &kp DOT          &kp N0         &kp N1  &kp N2  &kp N3  &trans
                                 &to 0         &sk LGUI         &sk RIGHT_GUI  &to 2
            >;
        };

        tri_layer {
            bindings = <
&trans               &trans  &trans  &trans  &kp NUM_5    &kp LG(LBKT)  &kp LC(LS(TAB))  &kp RC(TAB)   &kp LG(RBKT)  &trans
&kp F1               &trans  &trans  &trans  &kp DEL      &kp LEFT      &kp DOWN         &kp UP        &kp RIGHT     &kp ENTER
&td LG(GRAVE) GRAVE  &trans  &trans  &trans  &trans       &trans        &kp PG_DN        &kp K_VOL_DN  &trans        &trans
                                     &to 0   &trans       &sk RALT      &to 1
            >;
        };

        bt {
            bindings = <
&trans      &trans      &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans      &trans      &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans
&bt BT_PRV  &bt BT_NXT  &bt BT_CLR  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                    &to 0   &trans    &trans  &to 1
            >;
        };
    };
};
